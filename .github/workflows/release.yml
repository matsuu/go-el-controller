name: GoRelease

on:
  workflow_dispatch:
    inputs:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Set up gox
      run: go get github.com/mitchellh/gox

    - name: Cross build
      id: build
      run: |
          DATE=`date +'%Y%m%d%H%M%S'`
          VER=`date +'%Y%m%d%H%M%S'`-`git rev-parse --short HEAD`
          echo "::set-output name=RELEASE_VER::${VER}"
          #gox -osarch="linux/arm linux/amd64 darwin/amd64 windows/amd64" -ldflags "-X main.version=`git rev-parse --short HEAD`" ./cmd/elexporter/
          gox -osarch="linux/arm" -ldflags "-X main.version=${VER}" ./cmd/elexporter/

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
          name: elexporter
          path: ./elexporter_*

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ steps.build.outputs.RELEASE_VER }}
          release_name: Release ${{ steps.build.outputs.RELEASE_VER }}
          draft: false
          prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./elexporter_linux_arm
          asset_name: elexporter_linux_arm
          asset_content_type: application/octet-stream
